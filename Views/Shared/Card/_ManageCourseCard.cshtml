@model ManageCourseCard

@using System.Security.Claims

@inject IHttpContextAccessor HttpContextAccessor

@{
    var user = HttpContextAccessor.HttpContext?.User;
    string? user_role = user?.FindFirst(ClaimTypes.Role)?.Value;
}

<tr>
    <td scope="row" class="table-index">@Model.table_index</td>
    <td><a class="course-table-name" href='/Course/Detail?courseId=@Model.course_id'target="_blank">@Model.course_name</a></td>
    @if (user_role == UserRole.Student)
    {
        <td><a href="/Teacher/Profile?tchId=@Model.TchId" target="_blank">@Model.TeacherName</a></td>
    }
    <td>@Model.avg_rating</td>
    <td>
        @(Model.MSemesterStatus switch {
        SemesterStatus.waiting => "Sắp diễn ra",
        SemesterStatus.finished => "Đã kết thúc",
        SemesterStatus.started => "Đang diễn ra",
        _ => null
        })<br>
        @if(Model.MSemesterStatus != SemesterStatus.finished && Model.MRequestStatus == RequestStatus.waiting)
        {
            @("(Chờ duyệt)")
        }
    </td>
    <td>@Model.subject</td>
    <td>@Model.grade</td>
    <td>
        <div class="button-group-wrapper course-manager">
            @if (user_role == UserRole.Teacher)
            {
                <button class="card-btn course-detail" onclick="window.location.href='/TeacherManage/ManageSemester?courseId=@Model.course_id'">Các kì học</button>
                @await Html.PartialAsync("Popup/_StudentTablePopup")
                <button class="card-btn course-detail EditCourseBtn" data-course-id="@Model.course_id" data-bs-toggle="modal" data-bs-target="#EditCourseModal">Chỉnh sửa</button>
            }
            <button class="card-btn course-detail" onclick="window.location.href='/Course/Detail?courseId=@Model.course_id'">Xem chi tiết</button>
            @if (user_role == UserRole.Teacher)
            {
            <button class="card-btn course-detail DeleteBtn" style="background: salmon;"
                idx="@Model.course_id" data-course-name="@Model.course_name"
                data-tch-name="@Model.TeacherName"
                data-bs-toggle="modal" data-bs-target='#DeleteCourseModal'>Xóa</button>
            }
            @if (user_role == UserRole.Student)
            {
                @if (@Model.Commentable)
                {
                 if (Model.stars == 0)
                {
                    <button class="card-btn" style="background: honeydew" data-bs-toggle="modal" data-bs-target=@($"#myModal{Model.semesterId}")>
                        <span>Viết đánh giá</span>
                    </button>
                }
                else if (Model.stars > 0)
                {
                    <button class="card-btn" style="background: aliceblue" data-bs-toggle="modal" data-bs-target=@($"#myModal{Model.semesterId}")>
                        <span>Sửa đánh giá</span>
                    </button>
                }
                }
                @await Html.PartialAsync("Popup/_RatingFormPopup", (@Model.semesterId, @Model.stars, @Model.comment))
            }
        </div>
    </td>
</tr>

<script>
    if ( @(user_role == UserRole.Teacher ? "true" : "false") ) {
        document.querySelector(`.EditCourseBtn[data-course-id="${@Model.course_id}"]`) 
        .addEventListener('click', function () {
            const url = `/TeacherManageAPI/GetEditCourseForm`;
            const placeholderSelector = `#FormPlaceholder`;
            initPagination(null, url, placeholderSelector, { courseId: @Model.course_id });
        });

        document.querySelector(`.DeleteBtn[idx="${@Model.course_id}"]`).addEventListener('click', function () {
            const courseName = this.getAttribute('data-course-name');
            const tchName = this.getAttribute('data-tch-name');

            const modalTitle = document.querySelector(`#DeleteCourseModal .modal-title`);
            modalTitle.textContent = `Xóa khóa học ${courseName}`;

            const courseNameElement = document.querySelector(`#DeleteCourseName`);
            courseNameElement.textContent = `${courseName}`;

            const tchNameElement = document.querySelector(`#DeleteCourseTchName`);
            tchNameElement.textContent = `${tchName}`;

            initPagination(null, "/TeacherManageAPI/GetDeleteCourseForm", "#DeleteCourseFormPlaceholder", { id: @Model.course_id, submitUrl: "/TeacherManageAPI/SubmitDeleteCourseForm" });
        });
    }
</script>